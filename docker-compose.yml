version: '3.6'

networks:
  platform_network:
    ipam:
      config:
        - subnet: 192.168.1.0/24


# Platform Services
services:

  api_service:
    container_name: api_service
    image: 'ssanchez11/api_service:0.0.1'
    depends_on:
      - mongo

  mongo:
    image: mongo
    container_name: mongo
    env_file:
      - .env
    restart: always
    networks:
      platform_network:
        ipv4_address: 192.168.1.27
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}

    # Web-based MongoDB admin interface, written with Node.js and express
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    env_file:
      - .env
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongo
    networks:
      platform_network:
        ipv4_address: 192.168.1.28
    ports:
      - "8083:8081"